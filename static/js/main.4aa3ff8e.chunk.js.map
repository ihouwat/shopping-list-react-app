{"version":3,"sources":["groceriesTemplate.js","components/SearchArea.js","components/ListItemTemplate.js","components/UncategorizedListItems.js","groceryStores.js","components/CategorizedListItems.js","components/UncategorizedItemSnackbar.js","containers/GroceryLists.js","components/DeleteOrRecoverCompleted.js","components/CompletedList.js","components/EmptyList.js","components/TopNavigation.js","components/TopNavigationTitle.js","components/TopNavigationCategoryList.js","components/TopNavigationCategoryDisplay.js","components/TopNavigationFaves.js","components/FixedScroll.js","components/ErrorBoundary.js","containers/App.js","serviceWorker.js","index.js"],"names":["groceriesTemplate","name","count","useStyles","makeStyles","theme","input","paddingLeft","spacing","paddingRight","paddingBottom","textField","marginTop","SearchArea","formChange","formSubmit","formField","changeAutocomplete","closeAutocomplete","autocompleteIsOpen","checkFormField","classes","noValidate","onSubmit","Autocomplete","id","freeSolo","autoComplete","autoHighlight","clearOnEscape","autoSelect","variant","className","inputValue","open","onOpen","onClose","onChange","options","map","option","renderInput","params","TextField","value","label","fullWidth","autoFocus","margin","listItem","padding","listItemText","marginBottom","height","display","flexDirection","justifyContent","listItemTextPrimary","fontSize","color","palette","text","primary","listItemTextSecondary","secondary","modal","alignItems","paper","backgroundColor","background","borderRadius","boxShadow","shadows","width","maxWidth","ListItemTemplate","index","item","modalClose","modalItemName","modalOpen","deleteItem","completeItem","modalIsOpen","itemNotes","onAddNote","ListItem","button","key","ListItemText","disableTypography","multiline","onClick","bind","Typography","note","ListItemIcon","IconButton","aria-label","SvgIcon","xmlns","viewBox","d","fill","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paragraph","type","rows","placeholder","inputProps","list","paddingTop","UncategorizedListItems","groceryItems","category","sortGroceriesAlphabetically","a","b","itemA","toUpperCase","itemB","comparison","listItems","tempList","el","sort","sortedGroceries","List","component","groceryStores","stores","storeName","storeCategories","storeOrder","items","categoryTitle","borderTop","lineHeight","marginLeft","marginRight","textAlign","fontWeight","textTransform","CategorizedListItems","searchGroceryStoreTemplate","store","grocery","storeCategory","i","length","toLowerCase","includes","matchedItem","push","identifyCategoryInStoreTemplate","searchedItem","matchedItemCategory","currentStoreIndex","findIndex","currentStore","copiedStore","storeDeepCopyfunction","inArray","outArray","Array","isArray","undefined","matchId","uncategorizedIndex","find","TransitionUp","props","Slide","direction","UncategorizedItemSnackbar","Transition","React","useState","setOpen","transition","setTransition","Snackbar","onEnter","event","reason","TransitionComponent","autoHideDuration","message","GroceryLists","fireUncategorizedSnackbar","setState","snackbarIsOpen","setTimeout","state","prevProps","prevState","uncategorizedItem","this","activatedSnackbarOnce","Component","delOrRecoverMenu","menuItem","DeleteOrRecoverCompleted","deleteallcompleted","recoverallcompleted","anchorEl","setAnchorEl","handleClose","FormControlLabel","stopPropagation","onFocus","control","disableFocusRipple","size","aria-haspopup","aria-controls","currentTarget","Menu","keepMounted","Boolean","MenuItem","root","panel","boxDisplay","summary","flexGrow","details","textDecoration","textDecorationColor","heading","typography","pxToRem","CompletedList","completedItems","recoverItem","expanded","setExpanded","area-label","ExpansionPanel","isExpanded","Box","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","icon","main","light","textDark","textLight","EmptyList","p","TopNavigation","Paper","elevation","square","Container","children","TopNavigationTitle","menuSVG","flexBasis","menuTypography","TopNavigationCategoryList","onCategoryChange","mapCategories","aria-hidden","style","TopNavigationCategoryDisplay","handleClick","overflow","TopNavigationFaves","faveCheckChildElement","favoriteItems","listFavoriteItems","dense","divider","Checkbox","checked","isChecked","Set","forEach","has","disablePadding","FixedScroll","left","position","top","zIndex","ErrorBoundary","hasError","error","info","createMuiTheme","fontFamily","join","dark","contrastText","disabled","hint","App","addToList","concat","searchForItemInList","searchList","indexOf","removeFromList","splice","onFormChange","target","onChangeAutocomplete","newItem","Math","random","toString","substr","onCloseAutocomplete","autocompleteCheckFormField","onFormSubmit","preventDefault","charAt","slice","stateItems","faveLowerCase","stateCopy","Object","assign","onCompleteItem","completedItem","groceryList","onDeleteItem","deletedItem","onRecoverItem","onDeleteAllCompleted","onRecoverAllCompleted","completedList","newItems","route","topTenFavorites","favoritesState","ThemeProvider","pt","mx","mr","ml","autocompleteSelectValue","onAutocompleteSelectValue","mb","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4aa3ff8e.chunk.js","sourcesContent":["export const groceriesTemplate = [\r\n  { name: 'Apple', count: 0 },\r\n  { name: 'Apples', count: 10 },\r\n  { name: 'Banana', count: 0 },\r\n  { name: 'Bananas', count: 10 },\r\n  { name: 'Oatmeal', count: 10 },\r\n  { name: 'Clementines', count: 0 },\r\n  { name: 'Blueberries', count: 0 },\r\n  { name: 'Oranges', count: 0 },\r\n  { name: 'Hummus', count: 10 },\r\n  { name: 'Black Beans', count: 0 },\r\n  { name: 'Chocolate Chips', count: 10 },\r\n  { name: 'Cliff Bars', count: 0 },\r\n  { name: 'Cereal Bars', count: 0 },\r\n  { name: 'Almonds', count: 10 },\r\n  { name: 'Coffee', count: 10 },\r\n  { name: 'Orange Juice', count: 10 },\r\n  { name: 'Flax Seed', count: 5 },\r\n  { name: 'Grapes', count: 5 },\r\n]\r\n\r\nexport default groceriesTemplate;","/* eslint-disable no-use-before-define */\r\nimport React, { Fragment } from 'react';\r\nimport {TextField, makeStyles} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { groceriesTemplate } from '../groceriesTemplate';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingBottom: theme.spacing(0.75),\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(0.25),\r\n  }\r\n}));\r\n\r\nconst SearchArea = ({ formChange,  formSubmit, formField, changeAutocomplete, closeAutocomplete, autocompleteIsOpen, checkFormField }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <form noValidate onSubmit = { formSubmit }>\r\n        <Autocomplete\r\n          id=\"autocomplete-selector\"\r\n          freeSolo\r\n          autoComplete\r\n          autoHighlight\r\n          clearOnEscape\r\n          autoSelect\r\n          variant=\"outlined\" \r\n          className={classes.input}\r\n          inputValue = { formField }\r\n          open = {autocompleteIsOpen}\r\n          onOpen = {checkFormField}\r\n          onClose = {closeAutocomplete}\r\n          onChange = { changeAutocomplete }\r\n          options={groceriesTemplate.map((option) => option.name)}\r\n          renderInput={(params) => (\r\n            <TextField {...params}     \r\n              onChange = { formChange }\r\n              freeSolo \r\n              value = { formField }\r\n              label=\"Add item\" \r\n              fullWidth\r\n              autoFocus\r\n              margin=\"normal\" \r\n              id=\"searchfield\"\r\n              className={classes.textField}\r\n            />\r\n          )}\r\n        />\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchArea","import React from 'react';\r\n// Import Material Design UI Components\r\nimport { TextField, Typography, Modal, Backdrop, Fade, \r\n        makeStyles, ListItem, ListItemText, ListItemIcon, \r\n        IconButton, SvgIcon } from '@material-ui/core';\r\n\r\n        \r\n// Material-UI styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: 0,\r\n  },\r\n  listItemText: {\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    height: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingLeft: theme.spacing(2),\r\n    justifyContent: 'center',\r\n  },\r\n  listItemTextPrimary: {\r\n    fontSize: theme.spacing(1.85),\r\n    color: theme.palette.text.primary,\r\n  },\r\n  listItemTextSecondary: {\r\n    fontSize: theme.spacing(1.6),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  // Modal styles\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: theme.spacing(0.5),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2),\r\n    width: '100%',\r\n    maxWidth: 500\r\n  },\r\n}));\r\n\r\nconst ListItemTemplate = ({index, item, modalClose, modalItemName, modalOpen, deleteItem, completeItem, modalIsOpen, itemNotes, onAddNote}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ListItem className={classes.listItem} button key={index}>\r\n        <ListItemText \r\n          disableTypography\r\n          multiline\r\n          onClick={modalOpen.bind(this, item)}\r\n          className={classes.listItemText} \r\n        > \r\n          <Typography className={classes.listItemTextPrimary}>{item.name}</Typography>\r\n          <Typography className={classes.listItemTextSecondary}>{item.note}</Typography>\r\n        </ListItemText>\r\n        <ListItemIcon onClick={deleteItem.bind(this, item, 'items')}>\r\n          <IconButton aria-label = 'trash' >\r\n            <SvgIcon>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n            </SvgIcon>\r\n          </IconButton>\r\n        </ListItemIcon>\r\n        <ListItemIcon onClick={completeItem.bind(this, item, 'items')}>\r\n          <IconButton aria-label = 'done'>\r\n            <SvgIcon >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/></svg>\r\n            </SvgIcon>\r\n          </IconButton>\r\n        </ListItemIcon>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={modalIsOpen}\r\n        onClose={modalClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalIsOpen}>\r\n          <div className={classes.paper}>\r\n            <Typography variant='h5' paragraph={true} color=\"textPrimary\">\r\n              {modalItemName}\r\n            </Typography>\r\n            <form>\r\n              <TextField\r\n                id=\"standard-adornment-weight\"\r\n                multiline\r\n                type='text'\r\n                variant = \"filled\"\r\n                rows=\"2\"\r\n                fullWidth\r\n                value={itemNotes}\r\n                placeholder=\"Enter note\"\r\n                onChange={ onAddNote }\r\n                aria-describedby=\"standard-weight-helper-text\"\r\n                inputProps={{\r\n                  'aria-label': 'add note',\r\n                }}\r\n              />\r\n            </form>\r\n          </div>\r\n          </Fade>\r\n        </Modal>\r\n      </ListItem>\r\n  )\r\n}\r\n\r\nexport default ListItemTemplate;","import React from 'react';\r\n// Import Material Design UI Components\r\nimport ListItemTemplate from './ListItemTemplate';\r\nimport { List, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n}));\r\n\r\nconst UncategorizedListItems = ({modalClose, modalItemName, modalOpen, deleteItem, completeItem, modalIsOpen, itemNotes, onAddNote, groceryItems, category}) => {\r\n  const classes = useStyles();\r\n  \r\n  // Helper method to sort groceries alphabetically\r\n  const sortGroceriesAlphabetically = (a, b) => {\r\n    const itemA = a.name.toUpperCase();\r\n    const itemB = b.name.toUpperCase();\r\n    let comparison = 0;\r\n    if (itemA > itemB) {\r\n      comparison = 1;\r\n    } else if (itemA < itemB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison\r\n  }\r\n  \r\n  // Main method that creates a temporary list based on this.state.items\r\n  const sortedGroceries = () => {\r\n    let tempList = groceryItems.map(el=>el)\r\n    if (category === \"Order Entered\") {\r\n      return tempList\r\n    }\r\n    else if(category === \"Alphabetical\") {\r\n      let sortedList = tempList.sort(sortGroceriesAlphabetically)\r\n      return sortedList\r\n    }\r\n  }\r\n  \r\n  // Create a sorted list which will be passed to the mapping array below\r\n  const listToMap = sortedGroceries();\r\n  // Map out list items\r\n  const listItems = listToMap.map((item, index) => {\r\n    return (\r\n      <ListItemTemplate \r\n        key={index}\r\n        item={item}\r\n        modalClose={modalClose}\r\n        modalItemName={modalItemName}\r\n        modalOpen={modalOpen}\r\n        deleteItem={deleteItem}\r\n        completeItem={completeItem}\r\n        modalIsOpen={modalIsOpen}\r\n        itemNotes={itemNotes}\r\n        onAddNote={onAddNote}\r\n      />\r\n    )\r\n  })\r\n\r\n \r\n  return (\r\n    <List component=\"li\" aria-label=\"grocery list category\" className={classes.list}>\r\n      {listItems}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default UncategorizedListItems;","export const groceryStores = {\r\n  stores: [\r\n    {\r\n      storeName: \"Alphabetical\"\r\n    },\r\n    {\r\n      storeName: \"Order Entered\"\r\n    },\r\n    {\r\n      storeName: \"Fresh Thyme\",\r\n      storeCategories: [\r\n        {\r\n          storeOrder: 1,\r\n          category: 'Produce',\r\n          items: ['Apple', 'Apples', 'Banana','Bananas', 'Grapes', 'Clementines', 'Orange', 'Oranges']\r\n        },\r\n        {\r\n          storeOrder: 2,\r\n          category: 'Bulk Foods',\r\n          items: ['Oatmeal', 'Almonds']\r\n        },\r\n        {\r\n          storeOrder: 3,\r\n          category: 'Fridge',\r\n          items: ['Orange Juice', 'Milk', 'Almond Milk', 'Sausages', 'Tofu']\r\n        },\r\n        {\r\n          storeOrder: 4,\r\n          category: 'Uncategorized Items',\r\n          items: [],\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      storeName: \"Kroger Frandor\",\r\n      storeCategories: [\r\n        {\r\n          storeOrder: 1,\r\n          category: 'Produce',\r\n          items: ['Apple', 'Apples', 'Banana','Bananas', 'Grapes']\r\n        },\r\n        {\r\n          storeOrder: 2,\r\n          category: 'Uncategorized Items',\r\n          items: [],\r\n        }\r\n      ]\r\n    },\r\n  ]\r\n};\r\n\r\n","import React, {Fragment} from 'react';\r\nimport {groceryStores} from '../groceryStores';\r\nimport ListItemTemplate from './ListItemTemplate';\r\n// Import Material Design UI Components\r\nimport { Typography, makeStyles, List} from '@material-ui/core';\r\n\r\n// Material-UI styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  // Category styles\r\n  categoryTitle: {\r\n    borderTop: '1px solid #dadce0',\r\n    lineHeight: '2em',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    paddingTop: theme.spacing(2.25),\r\n    paddingBottom: theme.spacing(2.2),\r\n    textAlign: 'left',\r\n    fontWeight: '700',\r\n    fontSize: theme.spacing(1.8125),\r\n    textTransform: 'uppercase',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  // List styles\r\n  list: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  '@global': {\r\n    'li > p:nth-of-type(1)': {\r\n      borderTop: '0px',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst CategorizedListItems = ({ category, modalItemName, itemNotes, groceryItems, completeItem, deleteItem, onAddNote, modalClose, modalOpen, modalIsOpen }) => {\r\n  // Use styles from this file\r\n  const classes = useStyles();\r\n\r\n  // Helper method to create a temp copy of the grocery store array, with an empty items array\r\n  const storeDeepCopyfunction = (inArray) => {\r\n    let outArray, value, key\r\n      if(typeof inArray !== \"object\" || inArray === null) {\r\n        return inArray // Return the value if inArray is not an object\r\n      }\r\n      // Create an array or object to hold the values\r\n      outArray = Array.isArray(inArray) ? [] : {}\r\n      for (key in inArray) {\r\n        value = inArray[key]\r\n        // Recursively (deep) copy for nested objects, including arrays\r\n        outArray[key] = (key === 'items') ?  outArray[key] = []\r\n        : (typeof value === \"object\" && value !== null && key !== 'items') ? storeDeepCopyfunction(value)\r\n        : value\r\n      }\r\n    return outArray\r\n  }\r\n\r\n  // Helper method to search Grocery Store template array for item\r\n  const searchGroceryStoreTemplate = (store, grocery) => {\r\n    \r\n    for (const storeCategory of store) {\r\n      for (let i=0; i<storeCategory.items.length; i++) {\r\n        if (storeCategory.items[i] && grocery && storeCategory.items[i].toLowerCase().includes(grocery.name.toLowerCase())) {\r\n          // If an item matches one found in the template store, create new array\r\n          let matchedItem = [];\r\n          // Matched item array includes an object with store-specific id, category, name \r\n          matchedItem.push({\r\n              storeOrder: storeCategory.storeOrder,\r\n              category: storeCategory.category,\r\n              name: grocery.name,\r\n            });\r\n          return matchedItem\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Helper method to match item with its relevant store category\r\n  const identifyCategoryInStoreTemplate = (searchedItem, store) => {\r\n    // Variable to isolate the item category\r\n    let matchedItemCategory = searchedItem[0].storeOrder\r\n    for (let i = 0; i < store.length; i++ ) {\r\n      if(store[i].storeOrder === matchedItemCategory){\r\n        return store[i].storeOrder\r\n      }\r\n    }\r\n  }\r\n\r\n  const sortedGroceries = () => {\r\n    // Change current store by listening to state changes of 'category' from top-level App.js\r\n    let currentStoreIndex = groceryStores.stores.findIndex((store, index) => store.storeName === category)\r\n    let currentStore = groceryStores.stores[currentStoreIndex]\r\n    // Create a temporary list of the groceryItems coming from top-level App.js\r\n    let tempList = groceryItems.map(el=>el)\r\n    // Create a copy of the store template\r\n    const copiedStore = storeDeepCopyfunction(currentStore)\r\n    for (const item in tempList) {\r\n      // Find if item from template list in store template\r\n      let searchedItem = searchGroceryStoreTemplate(currentStore.storeCategories, tempList[item])\r\n      if (searchedItem !== undefined){\r\n        // Match the item with its category storeOrder in current store template\r\n        const matchId = identifyCategoryInStoreTemplate(searchedItem, currentStore.storeCategories)\r\n        for (let i in copiedStore.storeCategories){\r\n          // If match, add the item in the appropriate array index of copiedStore\r\n          if (copiedStore.storeCategories[i].storeOrder === matchId) {\r\n            copiedStore.storeCategories[i].items.push(tempList[item])\r\n          }\r\n        }\r\n      } else {\r\n        // If the new item does not match any known category, push to \"Uncategorized Items\"\r\n        // Find \"Uncategorized Items\" index in the store\r\n        let uncategorizedIndex = copiedStore.storeCategories.find(category => category.category === 'Uncategorized Items')\r\n        // Add new key-value pair to item. This triggers the fireUncategorizedSnackbar() method in App.js\r\n        // This leads to a snackbar popping up to warn the user the added item is uncategorized\r\n        tempList[item]['activatedSnackbarOnce'] = true;\r\n        // Push items to the \"Uncategorized Items\" index\r\n        uncategorizedIndex.items.push(tempList[item])\r\n      }\r\n    }    \r\n    return copiedStore\r\n  }\r\n\r\n  // Create a sorted list which will be passed to the mapping array below\r\n  const listToMap = sortedGroceries();\r\n  \r\n  const listItems = (listToMap.storeCategories).map(category => {\r\n    return (\r\n      <Fragment>\r\n      { category.items.length > 0\r\n        ? <Typography className = {classes.categoryTitle}>\r\n            {category.category}\r\n          </Typography>\r\n        : null\r\n      }\r\n      {category.items.map((item, index) => {\r\n          return (\r\n            <ListItemTemplate \r\n              key={index}\r\n              item={item}\r\n              modalClose={modalClose}\r\n              modalItemName={modalItemName}\r\n              modalOpen={modalOpen}\r\n              deleteItem={deleteItem}\r\n              completeItem={completeItem}\r\n              modalIsOpen={modalIsOpen}\r\n              itemNotes={itemNotes}\r\n              onAddNote={onAddNote}\r\n            />\r\n          )\r\n        })}\r\n      </Fragment>\r\n    ) \r\n})\r\n \r\n  return (\r\n    <List component=\"li\" aria-label=\"grocery list category\" className={classes.list}>\r\n      {listItems}\r\n    </List>\r\n  )\r\n\r\n}\r\n\r\nexport default CategorizedListItems;","import React from 'react';\r\nimport { Snackbar, Slide } from '@material-ui/core';\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst UncategorizedItemSnackbar = () => {\r\n  const [open, setOpen] = React.useState(true);\r\n  const [transition, setTransition] = React.useState(undefined);\r\n\r\n  const handleClick = (Transition) => () => {\r\n    setTransition(() => Transition);\r\n    setOpen(open)\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return setOpen(false);\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        open={open}\r\n        onEnter={handleClick(TransitionUp)}\r\n        onClose={handleClose}\r\n        TransitionComponent={transition}\r\n        autoHideDuration={4000}\r\n        message=\"Added item is uncategorized.\"\r\n      />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default UncategorizedItemSnackbar;\r\n","import React, {Component, Fragment } from 'react';\r\nimport UncategorizedListItems from '../components/UncategorizedListItems'\r\nimport CategorizedListItems from '../components/CategorizedListItems'\r\nimport UncategorizedItemSnackbar from '../components/UncategorizedItemSnackbar'\r\n\r\n\r\nclass GroceryLists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snackbarIsOpen: false, \r\n    }\r\n  }\r\n\r\n  // Listen for new added items. If the item is uncategorized, it will fire the snackbar \r\n  componentDidUpdate(prevProps, prevState) {\r\n    const uncategorizedItem = this.props.items[this.props.items.length - 1]\r\n    if(prevProps.items !== this.props.items && uncategorizedItem.activatedSnackbarOnce === true) {\r\n      this.fireUncategorizedSnackbar()\r\n    } \r\n  }\r\n\r\n  // Checks for uncategorized items to toggle snackbar warning\r\n  fireUncategorizedSnackbar = () => {\r\n      this.setState({snackbarIsOpen: true})\r\n      setTimeout(() => {\r\n        this.setState({snackbarIsOpen: false});\r\n      }, 4500);\r\n  }\r\n\r\n\r\n  render() {\r\n    const {...props} = this.props;\r\n    const {category, groceryItems} = this.props;\r\n    const {snackbarIsOpen} = this.state;\r\n    return (\r\n      <Fragment>\r\n        {groceryItems.length > 0 \r\n          ?\r\n            category === 'Order Entered' || category === 'Alphabetical' \r\n            ? <UncategorizedListItems {...props}/>\r\n            : <CategorizedListItems {...props}/>\r\n            \r\n          : null\r\n          }\r\n          {\r\n            snackbarIsOpen ? <UncategorizedItemSnackbar /> \r\n            : undefined\r\n          }\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroceryLists;","import React, { Fragment } from 'react';\r\nimport { FormControlLabel, makeStyles, Menu, MenuItem, IconButton, SvgIcon } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  delOrRecoverMenu: {\r\n    marginRight: theme.spacing(-1),\r\n  },\r\n  menuItem: {\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    paddingTop: theme.spacing(1.5),\r\n    paddingBottom: theme.spacing(1.5),\r\n    fontSize: theme.spacing(1.75),\r\n  },\r\n}))\r\n\r\nconst DeleteOrRecoverCompleted = ({deleteallcompleted, recoverallcompleted}) => {\r\nconst classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormControlLabel\r\n        aria-label=\"Menu\"\r\n        onClick={(event) => event.stopPropagation()}\r\n        onFocus={(event) => event.stopPropagation()}\r\n        control={\r\n          <IconButton \r\n          disableFocusRipple\r\n          size='medium'\r\n          color='text'\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"simple-menu\"\r\n          onClick={handleClick}\r\n          className={classes.delOrRecoverMenu}\r\n          >\r\n            <SvgIcon>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -1 19 21\" width=\"19px\" height=\"19px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\r\n            </SvgIcon>\r\n          </IconButton>\r\n          }\r\n        />\r\n        <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        >\r\n          <MenuItem className={classes.menuItem} onClick={()=> {\r\n            handleClose()\r\n            recoverallcompleted()\r\n            }}>Uncheck all items</MenuItem>\r\n            <MenuItem className={classes.menuItem} onClick={()=> {\r\n            handleClose()\r\n            deleteallcompleted()\r\n            }}>Delete all checked items</MenuItem>\r\n        </Menu>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DeleteOrRecoverCompleted;","import React from 'react';\r\nimport './CompletedList.css';\r\nimport DeleteOrRecoverCompleted from './DeleteOrRecoverCompleted';\r\n\r\n// Import Material Design UI Components\r\nimport { Box, makeStyles, List, ListItem, ListItemText, ListItemIcon, Typography, ExpansionPanel, ExpansionPanelSummary,ExpansionPanelDetails, IconButton, SvgIcon } from '@material-ui/core';\r\n\r\n// Expansion Panel styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  panel: {\r\n    boxShadow: 'none',\r\n    backgroundColor: '#fafafa',\r\n  },\r\n  boxDisplay: {\r\n    display: \"flex\",\r\n    height: theme.spacing(8),\r\n  },\r\n  summary: {\r\n    padding: '0 16px 0 0',\r\n    flexGrow: 1,\r\n  },\r\n  details: {\r\n    padding: '0',\r\n    textDecoration: 'line-through',\r\n    textDecorationColor: theme.palette.text.secondary,\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  list: {\r\n    width: '100%',\r\n  },\r\n  listItem: {\r\n    paddingRight: '0',\r\n  },\r\n}));\r\n\r\nconst CompletedList = ({ completedItems, deleteItem, recoverItem, deleteallcompleted, recoverallcompleted }) => {\r\n  //Expansion panel settings from Material-UI\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // Compiling list\r\n  const listItems = completedItems.map((item, index) => {\r\n    return (\r\n    <ListItem button key={index} className = {classes.listItem}>\r\n      <ListItemText secondary = {item.name}  />\r\n      <ListItemIcon onClick={deleteItem.bind(this, item, 'completedItems')}>\r\n        <IconButton aria-label = 'trash'>\r\n          <SvgIcon>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n          </SvgIcon>\r\n        </IconButton>\r\n      </ListItemIcon>\r\n      <ListItemIcon onClick={recoverItem.bind(this, item, 'completedItems')}>\r\n        <IconButton area-label= 'recover'>\r\n          <SvgIcon>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>\r\n          </SvgIcon>\r\n        </IconButton>\r\n      </ListItemIcon>\r\n    </ListItem>\r\n    )\r\n  })\r\n\r\n  if(completedItems.length === 0) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel className={classes.panel} expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <Box className={classes.boxDisplay}>\r\n          <ExpansionPanelSummary\r\n            expandIcon={\r\n              <SvgIcon>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n              </SvgIcon>\r\n            }\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n            className={classes.summary}\r\n          >\r\n            <Typography className={classes.heading}>{completedItems.length} checked off</Typography>\r\n          </ExpansionPanelSummary>\r\n          <DeleteOrRecoverCompleted\r\n            deleteallcompleted={deleteallcompleted} \r\n            recoverallcompleted={recoverallcompleted}\r\n          />\r\n        </Box>\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <List component=\"li\" aria-label=\"completed items\" className={classes.list}>\r\n            {listItems}\r\n          </List>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompletedList;","import React, { Fragment } from 'react';\r\nimport {SvgIcon, Box, makeStyles, Typography} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: theme.palette.primary.light,\r\n    borderRadius: 100,\r\n    padding: theme.spacing(5.5),\r\n    fontSize: theme.spacing(10),\r\n  },\r\n  textDark: {\r\n    marginTop: theme.spacing(4),\r\n    color: theme.palette.text.primary,\r\n    maxWidth: theme.spacing(35),\r\n    fontSize: theme.spacing(2),\r\n    fontWeight: 600,\r\n  },\r\n  textLight: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.text.secondary,\r\n    maxWidth: theme.spacing(35),\r\n    fontSize: theme.spacing(1.7),\r\n  },\r\n}))\r\n\r\nconst EmptyList = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Box\r\n        p={6}\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <SvgIcon className={classes.icon}>  \r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n        </SvgIcon>\r\n        <Typography>\r\n          <p  className={classes.textDark}>\r\n          {'Your list is empty'}\r\n          </p>\r\n          <p className={classes.textLight}>\r\n          {'Start adding things you need to make sure nothing is left. '}\r\n          {'Pick your store to modify the layout of categories.'}\r\n          </p>\r\n        </Typography>\r\n      </Box>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmptyList","import React, { Fragment } from 'react';\r\nimport { Paper, Container, Box } from '@material-ui/core';\r\n\r\nconst TopNavigation = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Paper elevation={4} square={true}>\r\n        <Container maxWidth=\"sm\">\r\n          <Box display=\"flex\" alignItems=\"center\" height={64}>\r\n            {props.children}\r\n          </Box>\r\n        </Container>\r\n      </Paper>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TopNavigation;","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst TopNavigationTitle = () => {\r\n  return (\r\n    <Box fontSize={20} flexGrow={1} textAlign=\"left\" color=\"text.primary\">\r\n      <h1>My Shopping List</h1>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TopNavigationTitle","import React, { Fragment } from 'react';\r\nimport {Typography, SvgIcon, MenuItem, makeStyles} from '@material-ui/core';\r\nimport {groceryStores} from '../groceryStores';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuItem: {\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    paddingTop: theme.spacing(1.5),\r\n    paddingBottom: theme.spacing(1.5),\r\n  },\r\n  menuSVG: {\r\n    flexBasis: '20%',\r\n    paddingRight: theme.spacing(1.5),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  menuTypography: {\r\n    fontSize: theme.spacing(1.75),\r\n  },\r\n}))\r\n\r\n\r\nconst TopNavigationCategoryList = ({handleClose, category, onCategoryChange}) => {\r\n  const classes = useStyles();\r\n  const mapCategories= groceryStores.stores.map((store, index) => {\r\n    return (\r\n      <MenuItem className={classes.menuItem} key={index} onClick={() => {\r\n        onCategoryChange(store.storeName)\r\n        handleClose();\r\n      }}>\r\n        <SvgIcon className={classes.menuSVG} fontSize=\"small\">\r\n          {category === store.storeName\r\n            ? <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"false\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>\r\n            : <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" style={{display: 'none'}} height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>\r\n          }\r\n        </SvgIcon>\r\n        <Typography className={classes.menuTypography}>\r\n          {store.storeName}\r\n        </Typography>\r\n      </MenuItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Fragment>\r\n      {mapCategories}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TopNavigationCategoryList;","import React, { Fragment, Component } from 'react';\r\nimport TopNavigationCategoryList from './TopNavigationCategoryList';\r\nimport {IconButton, SvgIcon, Menu, Box} from '@material-ui/core';\r\n\r\nclass TopNavigationCategoryDisplay extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        anchorEl: null,\r\n      }\r\n    }\r\n\r\n    handleClick = (event) => {\r\n      this.setState({anchorEl: event.currentTarget});\r\n    };\r\n\r\n    handleClose = () => {\r\n      this.setState({anchorEl: null});\r\n    };\r\n\r\n  render() {\r\n    const category = this.props.category;\r\n    const {onCategoryChange} = this.props;\r\n    const {anchorEl} = this.state;\r\n    return (\r\n      <Fragment>\r\n        <IconButton \r\n            disableFocusRipple\r\n            size='medium'\r\n            aria-haspopup=\"true\"\r\n            aria-controls=\"simple-menu\"\r\n            onClick={this.handleClick}\r\n            color='primary'\r\n          >\r\n            <SvgIcon>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n            </SvgIcon>\r\n          </IconButton>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n          value={category} \r\n        >\r\n          <Box\r\n            width={200}\r\n          >\r\n            <TopNavigationCategoryList\r\n              onCategoryChange= { onCategoryChange }\r\n              category = { category }\r\n              handleClose = { this.handleClose }\r\n            />\r\n          </Box>\r\n        </Menu>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopNavigationCategoryDisplay;","import React, { Fragment } from 'react';\r\nimport {Checkbox, IconButton, SvgIcon, Modal, Backdrop, Fade, makeStyles, List, ListItem, ListItemText, ListItemIcon} from '@material-ui/core';\r\n\r\n// Modal styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: theme.spacing(0.5),\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2),\r\n    width: '100%',\r\n    maxWidth: 375,\r\n    overflow: \"auto\",\r\n  },\r\n  listItem: {\r\n    height: theme.spacing(5.5),\r\n  },\r\n}));\r\n\r\n\r\nconst TopNavigationFaves = ({items, faveCheckChildElement, favoriteItems}) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = (event) => {\r\n    let myObjects = items;\r\n    let map = new Set(myObjects.map(el=>el.name.toLowerCase()));\r\n    favoriteItems.forEach(item => {\r\n     if(item.isChecked && !map.has(item.name.toLowerCase())) {\r\n         return item.isChecked = false\r\n        } else if (!item.isChecked && map.has(item.name.toLowerCase())) {\r\n          return item.isChecked = true\r\n        } \r\n    })\r\n    setOpen(true);\r\n  };  \r\n\r\n  const handleClose = (event, reason) => {\r\n    if(reason === \"backdropClick\") {\r\n      return setOpen(false)\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const listFavoriteItems  = favoriteItems.map((item, index) => {\r\n    return (\r\n      <ListItem dense divider key={index} className={classes.listItem}>\r\n      <ListItemText primary={item.name}/>\r\n      <ListItemIcon>\r\n        <Checkbox \r\n          checked = {item.isChecked}\r\n          key = {item.id}\r\n          value = {item.name}\r\n          onClick={faveCheckChildElement}\r\n          inputProps={{ 'aria-label': 'uncontrolled-checkbox' }}\r\n        />\r\n      </ListItemIcon>\r\n      </ListItem>\r\n  )})\r\n\r\n  return (\r\n    <Fragment>\r\n      <Fragment>\r\n        <IconButton \r\n            disableFocusRipple\r\n            size='medium'\r\n            color='default'\r\n            aria-haspopup=\"true\"\r\n            aria-controls=\"modal-menu\"\r\n            onClick={handleOpen}\r\n          >\r\n          <SvgIcon>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n          </SvgIcon>\r\n        </IconButton>\r\n      </Fragment>\r\n      <Fragment>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <h2 id=\"transition-modal-title\">Top 10 Favorite Items</h2>\r\n              <List dense disablePadding>\r\n                {listFavoriteItems}\r\n              </List>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </Fragment>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default TopNavigationFaves;","import React from 'react';\r\n\r\nconst FixedScroll = (props) => {\r\n  return (\r\n    <div style={{ left: '0', position: 'fixed', width: '100vw', top: '0', zIndex: '100' }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FixedScroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n    }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({hasError: true})\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooops. Something in the app broke.</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport './App.css';\n// Import Components\nimport SearchArea from '../components/SearchArea';\nimport GroceryLists from './GroceryLists';\nimport CompletedList from '../components/CompletedList';\nimport EmptyList from '../components/EmptyList';\nimport TopNavigation from '../components/TopNavigation';\nimport TopNavigationTitle from '../components/TopNavigationTitle';\nimport TopNavigationCategoryDisplay from '../components/TopNavigationCategoryDisplay';\nimport TopNavigationFaves from '../components/TopNavigationFaves';\nimport FixedScroll from '../components/FixedScroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport groceriesTemplate from '../groceriesTemplate';\n// Import Material Design UI Custom Theme API\nimport {  Box } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n// Material Design UI theme\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"'Telex'\", 'sans-serif'].join(','),\n  },\n  palette: {\n    primary: {\n      main: '#0040cb',\n      light: '#e7e9fa',\n      dark: '#002bb3',\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: '#cb0040',\n      light: '#fce2e7',\n      dark: '#a3003c',\n      contrastText: '#fff'\n    },\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.70)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n      hint: 'rgba(0, 0, 0, 0.38)'\n    },\n  },\n  spacing: 8,\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      formField: '',\n      items: [],\n      completedItems: [],\n      category: 'Fresh Thyme',\n      favoriteItems: [], // This is populated from back-end, see componentDidMount method\n      modalIsOpen: false,\n      modalItemName: '',\n      itemNotes: '',\n      autocompleteIsOpen: false,\n    }\n    this.onCompleteItem = this.onCompleteItem.bind(this);\n    this.onDeleteItem = this.onDeleteItem.bind(this);\n    this.onRecoverItem = this.onRecoverItem.bind(this);\n    this.addToList = this.addToList.bind(this);\n    this.removeFromList = this.removeFromList.bind(this);\n    this.modalClose = this.modalClose.bind(this);\n    this.modalOpen = this.modalOpen.bind(this);\n    this.onCloseAutocomplete = this.onCloseAutocomplete.bind(this);\n    this.autocompleteCheckFormField=this.autocompleteCheckFormField.bind(this);\n  }\n\n  // Methods\n  // On mount, take sorted grocery list from database and populate this.state.favoriteItems\n  componentDidMount () {\n    //Helper method to sort groceries by count\n    let sortFavorites = (a, b) => {\n      const itemA = a.count;\n      const itemB = b.count;\n      let comparison = 0;\n      if (itemA < itemB) {\n        comparison = 1;\n      } else if (itemA > itemB) {\n        comparison = -1;\n      }\n      return comparison\n    }\n    // Get top ten grocery items by count.\n    // Count number is historical record of how many times each item has been bought\n    const topTenFavorites = groceriesTemplate.sort(sortFavorites).slice(0,10)\n    // Create a new array\n    const favoritesState = []\n    // For each topTen, create an object and push into favoritesState\n    for (let index in topTenFavorites){\n      favoritesState.push({\n        // Grocery name\n        name: topTenFavorites[index].name,\n        // isChecked is false, when it is checked in TopNavigationFaves, it becomes tru\n        isChecked: false,\n      });\n    }\n    this.setState({favoriteItems: favoritesState});\n  }\n\n  // Generic add grocery method\n  addToList = (item) => {\n    // Add item to list\n    this.setState({items: this.state.items.concat(item)})\n  }\n\n  // Helper method to search for item in a list method - returns the object index\n searchForItemInList = (item, list) => {\n   // Determine which list to search, items or completedItems\n    if(list === 'items') {\n      var searchList = this.state.items;\n    } else {\n      searchList = this.state.completedItems;\n    }\n    // Search list and return match at index\n    for(var i=0; i < searchList.length; i++){\n      if (searchList[i].name === item.name){\n        return searchList.indexOf(searchList[i])\n      }\n    } return\n  }\n\n  // Helper method to remove item from list\n  // Index argument received from searchForItemInList() method\n  removeFromList = (list, index) => {\n    if(list === \"items\") {\n      this.state.items.splice( index, 1 );\n      this.setState({items: this.state.items});\n    } else {\n      this.state.completedItems.splice( index, 1 );\n      this.setState({completedItems: this.state.completedItems});\n    }\n  }\n\n  // Listen to search area input for the searchform component\n  onFormChange = (event) => {\n    this.setState({formField: event.target.value})\n  }\n\n  // When selecting item from autocomplete, add grocery item\n  onChangeAutocomplete = (event, value, reason) => {\n    // If selected value null, nothing happens\n    if (reason === \"blur\") {\n      this.setState({formField: ''})\n      this.setState({autocompleteIsOpen: false})\n      return\n    } else if (value === null ) {\n      return\n    }\n    const newItem = {\n      'name': value,\n      'note': '',\n      'id': Math.random().toString(36).substr(2, 9), // unique ID\n    }\n    //Add selected value to list\n    this.addToList(newItem)\n    //Empty form\n    this.setState({formField: ''})\n  } \n\n  onCloseAutocomplete = (event, reason) => {\n    if(reason === \"escape\" || reason === \"select-option\"){\n      this.setState({autocompleteIsOpen: false})\n    } \n  } \n\n  autocompleteCheckFormField = (event) => {\n    if (this.state.formField === '') {\n      this.setState({autocompleteIsOpen: false})\n    } \n    else{this.setState({autocompleteIsOpen: true})\n  }\n  }\n\n\n  // Listen to search area input while filling out list item note\n  onAddNote = (event) => {\n    this.setState({itemNotes: event.target.value})\n  }\n\n  // On 'enter' add grocery item\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.formField === '') {\n      return;\n    }\n    // Create new object from entered item\n    const newItem = {\n      'name': this.state.formField.charAt(0).toUpperCase(0) + this.state.formField.slice(1),\n      'note': '',\n      'id': Math.random().toString(36).substr(2, 9), // unique ID\n    } \n    this.addToList(newItem)\n    this.setState({formField: ''})\n  }\n\n  // Checks grocery list for matches with favorite items\n  // Toggles checkbox in Favorite Items modal depending on grocery list content\n  // Adds/deletes items to the list\n  faveCheckChildElement = (event) => {\n    let favoriteItems = this.state.favoriteItems\n    let stateItems = this.state.items;\n    let map = new Set(stateItems.map(el=>el.name.toLowerCase()));\n    //Toggle checkbox\n    favoriteItems.forEach(item => {\n      if (item.name === event.target.value)\n      item.isChecked =  event.target.checked\n    })\n    \n    //Search grocery list and add/remove items accordingly\n    favoriteItems.forEach(item => {\n      let faveLowerCase = item.name.toLowerCase()\n      if(item.isChecked && !map.has(faveLowerCase)) {\n        const newItem = {\n          'name': item.name,\n          'note': '',\n          'id': Math.random().toString(36).substr(2, 9), // unique ID\n        }\n        this.addToList(newItem)\n      } else if (!item.isChecked && map.has(faveLowerCase)) {\n        for(var i=0; i < this.state.items.length; i++){\n          if (this.state.items[i].name.toLowerCase() === faveLowerCase){\n            var stateCopy = Object.assign({}, this.state);\n            stateCopy.items[i] = Object.assign({}, stateCopy.items[i]);\n            this.removeFromList('items', i)\n          }\n        } \n      }\n    }) \n  }\n\n  // Acquire grocery item, move item from active to completed list\n  onCompleteItem = (completedItem, groceryList) => {\n    this.removeFromList(groceryList, this.searchForItemInList(completedItem, groceryList))\n    this.setState({completedItems: this.state.completedItems.concat(completedItem)}); \n    // When completing item, increment count for matched element the default groceries list\n    // The cound helps determine the favorite items\n    groceriesTemplate.map((el, i) => {\n      if (el.name === completedItem.name) {\n        el.count ++\n      }\n      return groceriesTemplate\n    })\n  }\n\n  // Fully delete item from whichever list it is in \n  onDeleteItem = (deletedItem, list) => {\n    this.removeFromList(list, this.searchForItemInList(deletedItem, list) )\n  }\n\n  // Readd item from completed list to grocery list\n  onRecoverItem = (item, list) => {\n    this.removeFromList(list, this.searchForItemInList(item, list))\n    this.addToList(item)\n  }\n\n  // Remove all completed items from completed List\n  onDeleteAllCompleted = () => {\n    this.setState({completedItems: []})\n  }\n\n    // Readd all completed items to grocery list\n  onRecoverAllCompleted = () => {\n    const completedList = this.state.completedItems;\n    let newItems = [...this.state.items];\n    newItems = newItems.concat(completedList);\n    this.setState({ items: newItems });\n    this.setState({completedItems: []})\n  }\n\n   // Modal open method for grocery list component\n   // For adding notes to grocery list item\n   modalOpen = (item, list) => {\n     // Search list and return match at index\n     for(var i=0; i < this.state.items.length; i++){\n       if (this.state.items[i].name === item.name){\n        var stateCopy = Object.assign({}, this.state);\n        stateCopy.items[i] = Object.assign({}, stateCopy.items[i]);\n        stateCopy.items[i].note = this.state.items[i].note;\n        this.setState(stateCopy);\n        this.setState({modalItemName: stateCopy.items[i].name})\n        this.setState({itemNotes: stateCopy.items[i].note})\n      }\n    } \n    this.setState({modalIsOpen: true});\n   };\n \n    // Modal close method for grocery list component\n    // Saves note to state\n   modalClose = () => {\n    for(var i=0; i < this.state.items.length; i++){\n      if (this.state.items[i].name === this.state.modalItemName){\n        var stateCopy = Object.assign({}, this.state);\n        stateCopy.items = stateCopy.items.slice();\n        stateCopy.items[i] = Object.assign({}, stateCopy.items[i]);\n        stateCopy.items[i].note = this.state.itemNotes;\n        this.setState(stateCopy);\n        this.setState({itemNotes: ''})\n      }\n    }\n    this.setState({modalIsOpen: false}); // Close modal\n  };\n\n  // Category menu handle to change category or grocery store\n  onCategoryChange = (route) => {\n    this.setState({category: route});\n  }\n\n  // Render\n  render () {\n    const { autocompleteIsOpen, category, modalItemName, favoriteItems, formField, items, completedItems, itemNotes, modalIsOpen } = this.state;\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <FixedScroll>\n            <TopNavigation>\n              <TopNavigationTitle/>\n              <ErrorBoundary>\n                <TopNavigationCategoryDisplay \n                  category = {category}\n                  onCategoryChange = {this.onCategoryChange}\n                />\n                <TopNavigationFaves \n                  items = {items}\n                  favoriteItems = {favoriteItems}\n                  faveCheckChildElement = {this.faveCheckChildElement}\n                />\n              </ErrorBoundary>\n            </TopNavigation>\n          </FixedScroll>\n          <ErrorBoundary>\n            <Box pt={11} maxWidth={600} mx={'auto'}>\n              <Box mr={2} ml={2} pt={1.5} className={'White-container'}>\n                <SearchArea\n                  formChange = {this.onFormChange}\n                  formSubmit = {this.onFormSubmit}\n                  formField = {formField}\n                  autocompleteSelectValue = {this.onAutocompleteSelectValue}\n                  closeAutocomplete = {this.onCloseAutocomplete}\n                  checkFormField = {this.autocompleteCheckFormField}\n                  autocompleteIsOpen = {autocompleteIsOpen}\n                  changeAutocomplete = {this.onChangeAutocomplete}\n                />\n                <GroceryLists \n                  category = { category }\n                  itemNotes = { itemNotes }\n                  modalIsOpen = { modalIsOpen }\n                  modalItemName  = { modalItemName }\n                  modalClose = { this.modalClose }\n                  modalOpen = { this.modalOpen }\n                  onAddNote = { this.onAddNote }\n                  groceryItems = { items } \n                  completeItem = {this.onCompleteItem}\n                  deleteItem = {this.onDeleteItem}\n                  items = {items}\n                />\n              </Box>\n              <Box mr={2} ml={2} mb={2}>\n                { items.length === 0 && completedItems.length === 0 && <EmptyList /> }\n                <CompletedList \n                  completedItems = { completedItems }\n                  deleteItem = {this.onDeleteItem}\n                  recoverItem = {this.onRecoverItem}\n                  deleteallcompleted = {this.onDeleteAllCompleted}\n                  recoverallcompleted = {this.onRecoverAllCompleted}\n                />\n              </Box>\n            </Box>\n          </ErrorBoundary>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}